-- game link https://www.roblox.com/games/11817304153/BACK-2019-Booga-Olympics

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (1==v17) then function v20(v30,v31,v32)if v32 then local v63=(v30/((5 -3)^(v31-(1 + 0))))%((1 + 1)^(((v32-1) -(v31-((1 -0) -0))) + (1 -0)));return v63-(v63%(612 -(479 + 132)));else local v64=2^(v31-(1 + 0));return (((v30%(v64 + v64))>=v64) and (3 -2)) or (0 + 0 + 0);end end v21=nil;function v21()local v38=0 + 0;local v39;while true do if (v38==(1 -(0 + 0))) then return v39;end if (v38==(0 + 0)) then v39=v1(v15,v18,v18);v18=v18 + (1 -0) + 0;v38=1;end end end v22=nil;v17=2;end if (v17==3) then function v24()local v40=v23();local v41=v23();return (( -(3 -1) * v20(v41,1363 -(1209 + 122))) + (1417 -(1201 + 215))) * ((920 -(266 + 652))^(v20(v41,744 -((106 -64) + 681),83 -52) -(692 + 331))) * ((((v20(v41,1 + (774 -(161 + 613)),36 -16) * ((1840 -(1158 + 680))^((2481 -1645) -(344 + 460)))) + v40)/((617 -(71 + 544))^(618 -(23 + 543)))) + (3 -2));end v25=nil;function v25(v33)local v42=0 -0;local v43;local v44;while true do if (v42==(2 + 1)) then return v6(v44);end if (v42==(791 -(7 + 6 + 778))) then v43=nil;if  not v33 then local v78=185 -(82 + 103);while true do if (v78==(0 + 0)) then v33=v23();if (v33==0) then return "";end break;end end end v42=3 -2;end if (v42==((2716 -(193 + 549)) -(1678 + 105 + 190))) then v43=v3(v15,v18,(v18 + v33) -((2807 -(916 + 411)) -(994 + 485)));v18=v18 + v33;v42=704 -(25 + 677);end if (v42==2) then v44={};for v73=1358 -(797 + 560), #v43 do v44[v73]=v2(v1(v3(v43,v73,v73)));end v42=3;end end end v26=v23;v17=4;end if (v17==5) then v29=nil;function v29(v34,v35,v36)local v45=v34[1];local v46=v34[2];local v47=v34[3];return function(...)local v65=0;local v66;local v67;local v68;local v69;local v70;while true do if (v65==0) then v66=1;v67= -1;v65=1;end if (v65==1) then v68={...};v69=v11("#",...) -1;v65=2;end if (v65==2) then v70=nil;function v70()local v80=v45;local v81=Const;local v82=v46;local v83=v47;local v84=v27;local v85={};local v86={};local v87={};for v98=610 -(490 + 120),v69 do if ((v98>=v83) or ((1786 -1258)>((5958 -(1367 + 49)) -((1075 -592) + 167)))) then v85[v98-v83]=v68[v98 + (1852 -(167 + 1684))];else v87[v98]=v68[v98 + 1 + 0];end end local v88=(v69-v83) + (1117 -((2353 -1445) + 72 + 136));local v89;local v90;while true do local v99=0 + 0;local v100;local v101;while true do if (((3353 -(915 + 159))<(3724 + 918)) and (v99==(1489 -(870 + 619)))) then v100=0 -0;v101=nil;v99=1 + 0;end if (((1319 -850)==(1392 -(765 + 158))) and (v99==(1 + 0))) then while true do if (((2394 -(1384 + 524))<(7825 -(19403 -13933))) and (v100==(0 + 0))) then v101=0 -0;while true do if (((3140 -(299 + 1432))<=(3036 -(1503 + 3))) and (v101==(608 -(458 + 149)))) then if (((6849 -4316)<(12895 -7937)) and (v90<=(12 + 13))) then if (((2702 -(212 + 95))>=(1884 + 277)) and (v90<=(1021 -(211 + 798)))) then if (((2151 -(473 + 384))>(1858 -1385)) and (v90<=(10 -(22 -17)))) then if (((3571 -1038)>(4543 -2701)) and (v90<=(1 + 1))) then if ((v90<=(0 -0)) or ((4688 -(398 + 467))==(1961 + (3132 -2056)))) then local v129=0 + 0;local v130;local v131;local v132;while true do if (((534 + 453)<=(3111 -(59 + 130))) and (v129==((0 -0) + 0))) then v130=0 -(0 + 0);v131=nil;v129=(1 + 0) -0;end if ((v129==(1 + 0)) or ((5292 -(448 + 263))>=(9514 -4785))) then v132=nil;while true do if ((v130==(0 + (0 -0))) or ((1114 + 2696)<(1713 -(1191 + 198)))) then local v254=0 + 0;while true do if (((2744 + 1056)<=(4903 -(172 + 29))) and (v254==(2 -1))) then v130=3 -(855 -(56 + 797));break;end if (((5373 -(949 + 906))>25) and (v254==(0 + 0))) then v131=v89[2 + 0];v132=v87[v89[3 -(0 -0)]];v254=977 -(497 + 479);end end end if ((v130==(1939 -(636 + 1302))) or ((12462 -8193)<(380 + 675))) then v87[v131 + 1 + 0]=v132;v87[v131]=v132[v89[1 + 3]];break;end end break;end end elseif ((v90==1) or ((2079 + 626)<=(4506 -1958))) then if (((3197 + 104)>(7753 -5156)) and v87[v89[2 + (1856 -(1277 + 579))]]) then v66=v66 + 1;else v66=v89[1 + 2];end else local v159=1426 -(97 + 1329);local v160;local v161;local v162;local v163;local v164;while true do if (((2870 + 746)>(3373 -((995 -(513 + 273)) + 338))) and (v159==(1 + 0))) then v162=nil;v163=nil;v159=877 -(205 + 670);end if (((1272 + (3314 -(762 + 1108)))>=(2824 -(302 + (120 -65)))) and (v159==(0 -0))) then v160=1836 -(616 + 1220);v161=nil;v159=2 -1;end if (((1458 -425)<((3540 -2581) + (7419 -5003))) and (v159==(1610 -(644 + 964)))) then v164=nil;while true do if ((v160==(2 -0)) or ((64 + 1865)==(252 + (1147 -727)))) then while true do if ((v161==(2 -1)) or (1286>(3767 -(706 + 926)))) then local v299=211 -(165 + 46);while true do if ((v299==((1 -0) + 0)) or ((1656 + 2319)==(3905 -(54 + 403)))) then v161=2;break;end if ((v299==(0 + 0 + 0)) or ((4312 -(753 + 621))>(9720 -5185))) then local v325=(292 -(157 + 135)) -0;while true do if ((v325==(1152 -(429 + 723))) or ((572 + 49)>=(2592 -(931 + 963)))) then v164={};v163=v9({},{__index=function(v351,v352)local v356=284 -(46 + 238);local v357;local v358;while true do if (((3356 -((1141 -559) + 1375))<(2345 -610)) and (v356==(1881 -(1043 + 837)))) then while true do if ((v357==(603 -(431 + 172))) or (2999<=((763 -(620 + 106)) + 130))) then local v368=1900 -(1272 + 628);while true do if ((v368==(0 -0)) or ((5351 -((2541 -(360 + 1204)) + 799))>=(6555 -1767))) then v358=v164[v352];return v358[412 -(368 + 43)][v358[3 -(1 + 0)]];end end end end break;end if (((2535 + 2106)>(1743 -643)) and (v356==(1323 -(383 + (1739 -799))))) then v357=0 + 0;v358=nil;v356=1 + 0;end end end,__newindex=function(v353,v354,v355)local v359=0 -0;local v360;local v361;while true do if ((v359==(1 + 0)) or ((4004 -2102)<=(271 + 176))) then while true do if ((v360==(0 -0)) or ((464 + (1262 -872))>=(6463 -5083))) then v361=v164[v354];v361[683 -((2006 -(183 + 1626)) + 485)][v361[6 -4]]=v355;break;end end break;end if ((v359==(0 + 0)) or (((989 -477) -311)>(216 + 454))) then v360=0 + 0;v361=nil;v359=1 + 0;end end end});v325=1;end if (((3296 -(25 + 2))<=(5426 -(424 + 1074))) and (v325==((883 + 231) -((654 -(9 + 3)) + 471)))) then v299=1 + 0;break;end end end end end if (((1756 -(143 + 96))==(2792 -1275)) and (v161==(2 -0))) then for v316=1 + 0,v89[2 + 2] do local v317=0 -(374 -(229 + 145));local v318;while true do if (((3547 -(69 + 1129))<(363 + 3862)) and (v317==(0 -0))) then v66=v66 + (1906 -(1324 + 581));v318=v80[v66];v317=771 -(552 + 218);end if (((3073 -(721 + 405))<(5842 -3067)) and (v317==(2 -1))) then if ((v318[1]==(3 + 0 + 12)) or (933>=(10866 -7141))) then v164[v316-(367 -(42 + 324))]={v87,v318[1 + 2]};else v164[v316-(1 + 0 + 0)]={v35,v318[426 -(291 + 132)]};end v86[ #v86 + (3 -2)]=v164;break;end end end v87[v89[2]]=v29(v162,v163,v36);break;end if (((3489 -(1953 -(611 + 48)))>=(3655 -(3424 -(340 + 865)))) and (v161==(452 -(139 + 313)))) then local v301=0 + 0;local v302;while true do if (((5159 -(70 + 1498))<=(10288 -5877)) and (v301==(0 + 0))) then v302=0 + 0;while true do if ((((5863 -(827 + 995)) -(660 + 579))<=(1670 + 1287)) and (v302==(4 -3))) then v161=1980 -(1967 + 12);break;end if (((182 + 115)<=(730 + 2611)) and ((0 + 0)==v302)) then local v345=0 -0;while true do if (((9852 -5537)==4315) and ((2 -1)==v345)) then v302=2 -1;break;end if (((0 + 0)==v345) or ((75 + 697)==(708 + 3879))) then v162=v82[v89[5 -2]];v163=nil;v345=1899 -(1439 + 459);end end end end break;end end end end break;end if (((2106 -(801 + 97))==(3058 -(1412 + 438))) and ((1234 -(764 + 470))==v160)) then local v263=1968 -(807 + (3122 -(1057 + 904)));while true do if (((3805 -(4793 -2072))<(3998 + 813)) and (v263==(79 -(63 + 15)))) then v160=1 + 0;break;end if (((16782 -12558)>698) and (v263==((0 -0) -0))) then v161=(0 + 0) -0;v162=nil;v263=(2 + 0) -1;end end end if ((v160==(1459 -(761 + 697))) or ((7223 -3090)<=(1070 + 281 + 314))) then local v264=0 + 0;while true do if (((3000 -(1074 -(11 + 11)))==(4619 -2671)) and (v264==(3 -2))) then v160=1 + 1;break;end if ((v264==(0 + 0)) or ((8264 -4113)<(2836 + 595))) then v163=nil;v164=nil;v264=1 + 0;end end end end break;end end end elseif (((709 -228)==(98 + 383)) and (v90<=(136 -((312 -214) + 35)))) then local v133=1815 -(1152 + 663);local v134;local v135;local v136;while true do if ((v133==(1135 -(357 + 778))) or ((2657 -1707)>=(882 + 2781))) then local v241=0 -0;while true do if ((v241==(0 -0)) or ((942 -711)==(5188 -(391 + 601 + 335)))) then v134=v89[2 -0];v135=v87[v134];v241=1 + 0;end if (((544 -(430 + 113))==v241) or ((4750 -(216 + 379))>=(6342 -(1266 + 484)))) then v133=1 + 0;break;end end end if (((1396 + (4396 -(84 + 923)))>=(2501 -591)) and (v133==(1458 -(869 + 588)))) then v136=v87[v134 + (815 -(192 + 621))];if ((v136>(0 -0)) or ((10189 -7591)<(33 + 2233))) then if ((v135>v87[v134 + 1 + 0]) or ((2317 -(806 + 37))==(4693 -(36 + 53 + 84)))) then v66=v89[8 -5];else v87[v134 + (376 -(333 + 40)) + 0]=v135;end elseif ((v135<v87[v134 + 1 + 0]) or ((1286 -(33 + 1142))>=(1085 -846))) then v66=v89[3];else v87[v134 + (4 -1)]=v135;end break;end end elseif (((557 -(99 + 73))==(962 -((748 -(84 + 485)) + 398))) and (v90==(1965 -((3729 -2619) + 851)))) then local v165=0 + 0 + 0 + 0;local v166;local v167;while true do if (((5851 -1850)>(5052 -(995 + 604))) and ((1 -0)==v165)) then v87[v166 + 1 + 0]=v167;v87[v166]=v167[v87[v89[(6 -4) + 2]]];break;end if ((v165==(0 + 0)) or (((18507 -7975) -6818)>=(5637 -(390 + 378)))) then local v247=1274 -(124 + 1150);while true do if (((4494 -(155 + 12))==(2233 + 2094)) and (v247==(98 -(96 + 2)))) then v166=v89[295 -(249 + 44)];v167=v87[v89[(2000 -(1633 + 366)) + 2]];v247=2 -1;end if (((1046 -(235 + 439))<2926) and (v247==(2 -1))) then v165=1 + (194 -(65 + 129));break;end end end end else v87[v89[314 -(172 + 140)]][v89[1 + 1 + 1]]=v89[1626 -(1001 + 621)];end elseif (((5956 -(479 + 1062))<(5386 -(434 + 14))) and (v90<=(685 -(61 + 616)))) then if ((1291<=(937 + 1516)) and (v90<=(16 -10))) then v87[v89[1173 -(1124 + 47)]]={};elseif ((v90==7) or ((12808 -(1781 + 6103))<=(3510 -(499 + 1464)))) then v87[v89[5 -3]]=v87[v89[685 -(492 + 190)]] + v89[4 + 0];else v66=v89[6 -3];end elseif ((v90<=(13 -(7 -4))) or ((4249 -1954)>(4579 -(4 + 40 + 354)))) then if ((v90>(23 -(269 -(49 + 206)))) or ((23586 -18854)>=(18135 -13321))) then local v170=0 + 0;local v171;local v172;local v173;while true do if (((3023 + 1392)>(1290 -840)) and (0==v170)) then v171=753 -(373 + 380);v172=nil;v170=1 + 0;end if (((8367 -5106)>(751 + 66 + 42)) and (v170==(2 -1))) then v173=nil;while true do if ((v171==(1371 -((461 -108) + 1018))) or ((3810 -(1027 + 50))<(3755 -(218 + 80 + 1482)))) then local v265=0 + 0;while true do if (((9720 -5522)==(6746 -2548)) and (v265==(1 + (78 -(39 + 39))))) then v171=2 -1;break;end if (((1903 -(201 + 1109 + 521))==(825 -(13 + 740))) and (v265==(0 -0))) then v172=v89[9 -7];v173={};v265=944 -(116 + 827);end end end if ((v171==1) or ((1495 + 1988)<(2073 + 973 + 280))) then for v281=486 -(448 + 37), #v86 do local v282=1973 -(254 + 1719);local v283;local v284;while true do if ((((13339 -7316) -2807)==((2795 -(700 + 554)) + 477 + 1198)) and ((1 -0)==v282)) then while true do if ((((609 -212) + 130)<=1754) and (v283==(0 + 0))) then v284=v86[v281];for v335=0 + 0, #v284 do local v336=(2946 -1803) -(515 + 628);local v337;local v338;local v339;local v340;while true do if ((v336==(590 -(74 + 515))) or ((882 + (463 -197))>(2526 + 837))) then v339=nil;v340=nil;v336=5 -(3 -0);end if ((v336==(1066 -((1394 -(566 + 248)) + 486))) or ((13254 -8824)<=(824 + 241))) then v337=592 -(246 + 346);v338=nil;v336=1866 -(1369 + 496);end if (((4799 -(304 + 1103))<=(10194 -(15553 -9840))) and (v336==(546 -(331 + 213)))) then while true do if (((7739 -(15122 -9549))<=(10807 -8254)) and (v337==(1 + 0))) then v340=v338[2 + 0];if (((v339==v87) and (v340>=v172)) or ((5196 -(963 + 36 + 842))<(264 + 2974))) then local v365=0 -(1544 -(613 + 931));local v366;while true do if ((((6559 -(1595 + 279)) -(396 + 277))<=(14953 -10129)) and (v365==(0 -0))) then v366=0 -0;while true do if (((2540 -(750 + 114))>(3176 -(1287 + 570))) and (v366==(0 -0))) then v173[v340]=v339[v340];v338[1 + 0 + 0]=v173;break;end end break;end end end break;end if (((1947 + 57)>(3017 -1099)) and (v337==((2583 -(106 + 591)) -(1559 + 327)))) then local v364=0 + 0;while true do if ((v364==(1 + 0)) or ((2474 -((3213 -2417) + (1572 -(481 + 773))))>3920)) then v337=1107 -(308 + 798);break;end if ((v364==(0 + 0)) or ((3833 -2870)>(3456 -(159 + 745)))) then v338=v284[v335];v339=v338[2 -1];v364=2 -1;end end end end break;end end end break;end end break;end if (((3860 + 250 + 113)==(7922 -3699)) and (v282==(0 -0))) then v283=0 + 0;v284=nil;v282=1676 -(587 + 1088);end end end break;end end break;end end else local v174=(1922 -(179 + 1743)) -0;local v175;local v176;local v177;while true do if ((v174==(1270 -(433 + 836))) or ((2071 -(217 + 720 + 652))>3586)) then v177=nil;while true do if (((1105 + 503)>=(1151 -(7 + 26 + 53))) and (v175==(0 -0))) then local v266=0 -0;while true do if (((356 + 2762)==(10536 -7418)) and ((1207 -(798 + 409))==v266)) then v176=389 -(51 + 338);v177=nil;v266=3 -2;end if ((((168 -(79 + 88)) + 0)==v266) or (2222>=(8888 -3991))) then v175=1 + 0 + 0;break;end end end if ((v175==(302 -(252 + 49))) or ((6002 -(1538 + 35))<((432 + 4410) -(281 + 156 + 624)))) then while true do if ((v176==(711 -(107 + 604))) or (((5683 -(95 + 509)) -2677)<=(1472 -469))) then v177=v89[1115 -(351 + 762)];v87[v177](v87[v177 + 1 + 0]);break;end end break;end end break;end if (((3836 + 614)>=(3282 -((444 -324) + 57))) and (v174==(1054 -(645 + 409)))) then v175=(2810 -955) -(1581 + 274);v176=nil;v174=942 -(137 + 494 + 310);end end end elseif (((2583 + 273)<(7551 -3138)) and (v90>(1440 -(1388 + 41)))) then v87[v89[2 + 0]]=v89[5 -2];else v87[v89[1 + 1]]= #v87[v89[7 -4]];end elseif (((5196 -(881 + 2387))<=((2222 -919) + 3285)) and (v90<=(1808 -(1595 + 195)))) then if ((v90<=(1521 -(1342 + 164))) or ((5333 -3017)<=(2960 -(1136 + 40)))) then if ((v90<=(20 -7)) or ((2308 -(428 + 29 + 370))>=(3017 -(554 + 293)))) then v87[v89[2 -0]]=v89[1586 -(1546 + (909 -(849 + 23)))]~=(1048 -(692 + 356));elseif ((v90==(11 + 3)) or ((98 + (70 -55))>=(8717 -5646))) then if ((v87[v89[337 -(48 + 287)]]==v89[4 + 0]) or ((2228 -(231 + 56))<(359 + 142))) then v66=v66 + (875 -(86 + 788));else v66=v89[1508 -(1262 + 243)];end else v87[v89[5 -3]]=v87[v89[615 -(3 + 11 + 598)]];end elseif (((1773 -(612 + 144))<=(11960 -7182)) and (v90<=(61 -45))) then v87[v89[3 -1]]=v87[v89[1 + 2]]%v89[1 + 3];elseif ((v90==(28 -(547 -(62 + 474)))) or ((3410 -(755 + 482))==1442)) then if ((((1102 -267) + 1266)<(5165 -(480 + 150))) and (v87[v89[2 + 0]]~=v87[v89[8 -4]])) then v66=v66 + (2 -1);else v66=v89[778 -(439 + 336)];end else v87[v89[1 + 1]]();end elseif ((v90<=(77 -56)) or ((3297 -1760)>=(5757 -2950))) then if (((13696 -9016)>=(1566 -(122 + 321))) and (v90<=(994 -(801 + 158 + 16)))) then v87[v89[1429 -((923 -(282 + 25)) + 811)]][v89[6 -3]]=v87[v89[(2088 -965) -(528 + 591)]];elseif (((4477 -(1161 + 143))<(5002 -((2110 -(1254 + 709)) + 796))) and (v90>(86 -66))) then local v181=0 + 0;local v182;local v183;local v184;local v185;local v186;while true do if ((v181==1) or (((3190 -(127 + 1270)) + (1975 -665))>(5009 -(123 + 93 + 308)))) then v184=nil;v185=nil;v181=(553 -(271 + 280)) -0;end if (((54 + 204)<=(656 + 3129 + 722)) and (v181==(1569 -(906 + 661)))) then v186=nil;while true do if ((v182==(3 -2)) or ((4483 -2120)>=(4705 -(291 + 991)))) then local v267=0 + 0;while true do if (((4984 -(880 + 139))>=(369 + 1551)) and (v267==((206 + 362) -(514 + (982 -(902 + 26)))))) then v185=nil;v186=nil;v267=1 -0;end if ((v267==(1933 -(734 + (4248 -3050)))) or ((256 + 413)==(890 + (1188 -774)))) then v182=3 -1;break;end end end if (((5718 -(46 + 845))==(5521 -(616 + 78))) and (v182==(576 -(311 + (409 -144))))) then local v268=0 + 0;while true do if (((5696 -(500 + 990))<(6857 -(413 + 1492))) and (v268==(0 + 0))) then v183=(1443 -863) -(404 + 176);v184=nil;v268=1 + 0;end if ((v268==1) or ((7189 -5508)<(2181 -1159))) then v182=2 -1;break;end end end if (((2049 + 236)>=(601 -(46 + 146))) and (v182==((6 + 2) -6))) then while true do if ((v183==2) or ((5796 -(218 + 714))<=(1149 -(696 + 368)))) then if (((1239 -(1119 + 52))==(49 + 3 + 16)) and (v185>(0 + 0))) then if (((6076 -4221)<=(796 + 2607)) and (v186<=v87[v184 + (1 -0)])) then local v327=0 -0;local v328;while true do if (((7188 -3088)>=(2661 -1707)) and (v327==(0 + 0))) then v328=0 -0;while true do if ((v328==(0 -0)) or ((1267 + 159)>=(14750 -9805))) then v66=v89[10 -7];v87[v184 + (568 -(109 + 456))]=v186;break;end end break;end end end elseif (((3256 + 1534)>=(11335 -(14467 -7610))) and (v186>=v87[v184 + ((1 -0) -0)])) then local v329=0 -0;local v330;local v331;while true do if ((v329==(4 -(1 + 2))) or ((486 + 1323)>=(3071 -(292 + (163 -114))))) then while true do if (((4500 -(1580 + 267))>(2663 -(71 + 14))) and (v330==(0 + 0))) then v331=(0 + 0) -(1962 -(71 + 1891));while true do if ((v331==(0 + (0 -0))) or ((2809 -((1393 -399) + 764))>=(412 + 75 + 3955))) then v66=v89[6 -3];v87[v184 + (6 -3)]=v186;break;end end break;end end break;end if ((v329==(0 -0)) or ((308 + 394)>=((7665 -(1347 + 395)) -(103 + 919)))) then v330=(0 -0) + 0;v331=nil;v329=1 -0;end end end break;end if (((3477 -(139 + (3115 -2465)))<=(10622 -5640)) and (v183==(1024 -((226 -100) + 897)))) then local v303=0 -0;local v304;while true do if (((5069 -(732 + 28))>=(1074 -(521 + 226))) and (v303==(491 -(397 + 94)))) then v304=0 + 0 + 0;while true do if (((0 -0)==v304) or (1063>=(123 + 963 + 1628))) then v186=v87[v184] + v185;v87[v184]=v186;v304=1 + (1403 -(27 + 1376));end if ((v304==(2 -(1267 -(460 + 806)))) or ((12527 -7991)<(961 -(545 + 270)))) then v183=7 -5;break;end end break;end end end if (((1805 -(1453 + 258 + 63))==(1133 -(980 + 122))) and (v183==(527 -(208 + 319)))) then local v305=438 -(262 + 176);local v306;while true do if ((v305==(62 -(44 + 18))) or (3231>(4479 + 195))) then v306=0 -0;while true do if ((v306==((2 + 0) -1)) or ((13655 -10245)<(2634 -(1234 + 581)))) then v183=1 + 0;break;end if ((v306==((4637 -2827) -(1446 + 364))) or ((79 + 4264)<=(1637 + 2530))) then local v347=1158 -(410 + 748);while true do if ((v347==(0 + 0 + 0)) or ((2497 -(149 + 1387))<=(448 -267))) then v184=v89[4 -2];v185=v87[v184 + ((4489 -3320) -(71 + 1096))];v347=1 + 0;end if ((v347==(3 -2)) or ((3468 + 406)<(325 + 242))) then v306=1124 -(988 + 135);break;end end end end break;end end end end break;end end break;end if (((594 + 2860)>(10555 -7508)) and (v181==(0 -0))) then v182=0 + 0;v183=nil;v181=1 + 0;end end else local v187=0 + 0;local v188;local v189;while true do if (((1353 -(577 + 543))<=(10483 -5779)) and (v187==(0 -0))) then v188=(0 -0) + 0;v189=nil;v187=1 -0;end if (((3603 -(208 + 126))<=(6159 -(1585 + 77))) and ((2 -1)==v187)) then while true do if ((0==v188) or ((11576 -8195)<=(378 -167))) then v189=v89[(184 -(158 + 23)) -1];v87[v189]=v87[v189](v87[v189 + 1]);break;end end break;end end end elseif (((3516 -(1815 + 786))>=(245 -143)) and (v90<=(85 -62))) then if ((((2194 -(82 + 1898)) + 57)<=(1984 -(212 + 1252))) and (v90==(106 -84))) then local v190=0 + (132 -(57 + 75));local v191;local v192;local v193;local v194;local v195;local v196;while true do if (((3986 -(4 + 160))==((5083 + 2851) -4112)) and ((1 + 0)==v190)) then v193=nil;v194=nil;v190=9 -7;end if (((0 -0)==v190) or ((326 + 1418)==(322 + 2970))) then v191=567 -((808 -391) + 150);v192=nil;v190=1202 -(1184 + 17);end if ((v190==(724 -(45 + 677))) or (4082>(304 + 4612))) then v195=nil;v196=nil;v190=1 + 2;end if ((v190==(4 -1)) or ((6792 -(6881 -3517))<(3990 -(729 + 79 + 1113)))) then while true do if (((1 + 0)==v191) or ((346 + 61)>(469 + 109 + 1331))) then local v270=0 + 0;while true do if (((386 + 97)<=(3048 -(494 + 35 + 1))) and (v270==(0 -(0 -0)))) then v194=nil;v195=nil;v270=1;end if (((5170 -(191 + 1051 + 591))==(8105 -4768)) and (v270==(2 -1))) then v191=6 -4;break;end end end if ((v191==2) or ((2041 -(81 + 808))<=(1636 -(204 + 640)))) then v196=nil;while true do if ((v192==0) or ((3398 -(14 + 566))<=(6290 -5018))) then local v307=0 + 0;local v308;while true do if (((2846 -(15 + 87))<=(2056 + 1122)) and ((0 -0)==v307)) then v308=1398 -(382 + 1016);while true do if (((3992 -(695 + 22))>((5424 -(881 + 190)) -2244)) and (v308==0)) then v193=v89[217 -(194 + 21)];v194,v195=v84(v87[v193](v12(v87,v193 + 1 + 0,v67)));v308=1 + 0;end if (((1 -0)==v308) or (((3533 + 9329) -(11486 -(760 + 991)))>(17012 -12137))) then v192=1 -(0 -0);break;end end break;end end end if ((v192==((4209 -2787) -(514 + 12 + 895))) or (2218<(78 + 201))) then local v309=1112 -(614 + 498);local v310;while true do if ((v309==(0 -0)) or ((3443 + 843)<=(1395 -(805 + 176)))) then v310=1390 -(1267 + 123);while true do if ((4837>(669 -(72 + 95))) and ((4 -3)==v310)) then v192=(1123 -(213 + 908)) + 0;break;end if (((0 + 0)==v310) or ((2442 + 468)<(357 + 1740))) then local v348=0 + 0;while true do if ((v348==(1412 -(634 + 777))) or ((2842 + 640)>=(16567 -12163))) then v310=1 + 0;break;end if (((676 + 4)>=(1539 -1191)) and ((0 -0)==v348)) then v67=(v195 + v193) -(2 -1);v196=0 -0;v348=1 + 0;end end end end break;end end end if ((v192==((1034 + 376) -(888 + 520))) or ((4999 -(1219 + 173))<=(817 -347))) then for v319=v193,v67 do local v320=520 -(302 + 218);local v321;local v322;while true do if (((4565 -3519)>(1105 -529)) and ((0 + 0)==v320)) then v321=1163 -(155 + 1008);v322=nil;v320=1 + 0;end if ((v320==(1 + 0 + 0)) or ((437 + 1958)==(1909 + 1553))) then while true do if (((1028 -(195 + 833))==v321) or ((3716 -((1487 -1102) + (257 -(165 + 3))))==(6056 -3539))) then v322=1347 -(763 + 584);while true do if ((v322==(0 -0)) or ((1725 + (2714 -(48 + 570)))<=(1501 + 2283))) then v196=v196 + (2 -1);v87[v319]=v194[v196];break;end end break;end end break;end end end break;end end break;end if (((2095 + 133)<=(2470 + 103)) and (v191==(1524 -(1014 + 510)))) then local v271=0 + 0;while true do if (((1490 -711)<(2525 + 2105)) and (v271==(0 + 0))) then v192=0 -0;v193=nil;v271=1 -0;end if ((v271==(3 -2)) or ((2107 -(140 + 1313))>(2206 + 2565))) then v191=769 -(484 + 284);break;end end end end break;end end else v87[v89[6 -4]][v87[v89[(1133 -(891 + 167)) -(12 + 60)]]]=v87[v89[1330 -(118 + 1208)]];end elseif (((1372 -623)<(9572 -4792)) and (v90==(98 -(193 -119)))) then local v198=(180 -56) -(8 + 116);local v199;local v200;local v201;while true do if (((935 + 1882)<((3884 -(516 + 214)) -(39 + 44))) and (v198==(0 -0))) then local v248=1517 -(1165 + 352);while true do if ((((1646 + 3789) -2801)>=(6575 -4167)) and (v248==(1749 -(898 + 851)))) then v199=0 -0;v200=nil;v248=361 -(165 + 195);end if ((1==v248) or ((2184 -(23 + 824))>=(3950 -(866 + 402)))) then v198=1646 -(1249 + 396);break;end end end if (((1 + 0)==v198) or ((8071 -5241)==(2756 -(554 + 361)))) then v201=nil;while true do if ((v199==(1 -0)) or ((1953 -915)>=(2232 -1153))) then for v285=v200 + 1 + 0,v89[80 -(20 + 56)] do v201=v201   .. v87[v285];end v87[v89[2 + 0]]=v201;break;end if (((1060 -(26 + 6))==(720 + 308)) and (v199==(0 -0))) then local v273=355 -(57 + 298);local v274;while true do if ((((3000 -(860 + 91)) + 384)>(774 -(192 + 284))) and (v273==(923 -(470 + 453)))) then v274=(592 -(241 + 351)) -0;while true do if ((v274==(2 -1)) or ((4478 -(298 + 1220))<=(2060 -1347))) then v199=1 + 0 + 0;break;end if ((((0 -0) + 0)==v274) or ((6716 -4340)<(4692 -2990))) then v200=v89[4 -1];v201=v87[v200];v274=2 -1;end end break;end end end end break;end end else v35[v89[4 -1]]=v87[v89[1756 -(184 + 1570)]];end elseif (((2678 + 2231)>=(2431 + 49)) and (v90<=((1109 -(601 + 483)) + 13))) then if ((v90<=(17 + 14)) or ((1540 + 2904)>=(17174 -(49526 -36802)))) then if ((v90<=(40 -12)) or ((573 + 2914)<=(1130 + 1952))) then if ((v90<=(690 -(243 + 421))) or ((814 -(1340 -776))>(3688 -1819))) then local v141=0 -0;local v142;local v143;local v144;local v145;local v146;local v147;while true do if ((((25330 -12022) -8349)>=(7234 -2944)) and (v141==(10 -7))) then while true do if ((v142==((4677 -2993) -(692 + (1660 -(665 + 4))))) or ((2951 + 753)<1104)) then local v257=0 -0;while true do if (((310 -95)<(4045 -(622 + 1122))) and ((1 -0)==v257)) then v142=2 -0;break;end if ((v257==0) or ((5719 -(608 + 590))<(5 + 42))) then v145=nil;v146=nil;v257=767 -(660 + 106);end end end if ((v142==(1 + 1)) or ((18663 -13950)<(3013 -(140 + 114)))) then v147=nil;while true do if ((v143==(628 -(83 + 544))) or ((1038 + 707)==(1833 -((2362 -1287) + 745)))) then local v286=0 -0;while true do if (((13346 -8746)>(10473 -6361)) and (v286==(0 + 0))) then local v323=0 + 0;while true do if ((v323==(0 -0)) or ((103 + 504)>=(1487 + 2675))) then v67=(v146 + v144) -((193 -(49 + 143)) + 0);v147=745 -(194 + 551);v323=3 -(2 + 0);end if (((18 -(984 -(89 + 882)))<=((3436 + 4939) -5583)) and (v323==(4 -3))) then v286=1 + 0;break;end end end if (((6259 -(1161 + 158))>=4264) and (v286==(3 -2))) then v143=602 -(599 + 1);break;end end end if ((((326 + 2940) -(984 + 291))<=(8779 -5618)) and (v143==(7 -5))) then for v293=v144,v67 do local v294=0 -0;local v295;while true do if ((v294==(0 + 0)) or ((859 -540)>=(980 -(10 + 337)))) then v295=(6 + 641) -(351 + 296);while true do if (((10696 -7970)>=((1005 + 798) -(526 + 841))) and (v295==(0 -(0 + 0)))) then v147=v147 + 1 + 0;v87[v293]=v145[v147];break;end end break;end end end break;end if (((4079 -1542)>(647 + 1684)) and ((945 -(548 + 397))==v143)) then local v287=1192 -(1092 + 100);local v288;while true do if (((2932 -1651)<(5077 -(713 + 373))) and (v287==(0 + 0))) then v288=995 -(239 + 756);while true do if ((v288==(0 + 0)) or ((4122 -(3159 -(296 + 734)))==(16634 -11904))) then local v332=0 -0;while true do if (((3726 -(12 + 28))==(1320 + 2366)) and (v332==(1017 -(105 + 912)))) then v144=v89[(482 -(43 + 437)) + 0];v145,v146=v84(v87[v144](v87[v144 + (459 -(226 + 232))]));v332=1 -0;end if ((v332==((1 + 2) -2)) or ((6091 -1953)==(1280 + 10))) then v288=1 -0;break;end end end if ((v288==(3 -2)) or (1271>(5328 -(896 + 139)))) then v143=1 + 0;break;end end break;end end end end break;end if (((61 + 4774)>((22036 -16788) -((808 -370) + 536))) and (v142==(769 -(154 + 615)))) then local v258=0 + 0;while true do if ((v258==(2 -1)) or ((2229 -(166 + (1358 -(139 + 1163))))<=(2689 -1958))) then v142=(1025 + 250) -(331 + 943);break;end if ((v258==(0 -(0 -0))) or ((4179 -1931)==(1638 + 242))) then v143=1941 -(1306 + 635);v144=nil;v258=1 -0;end end end end break;end if (((8578 -3678)>=(482 + (1498 -(23 + 1088)))) and (v141==1)) then v144=nil;v145=nil;v141=2 -0;end if ((((6079 -3397) -(670 + 706))<(11244 -7401)) and (v141==(0 + 0 + 0))) then v142=0 -0;v143=nil;v141=1 + 0;end if ((v141==(2 + 0)) or ((562 + (620 -424))>=(6095 -((1841 -(846 + 434)) + 601)))) then v146=nil;v147=nil;v141=3 + 0;end end elseif (((11248 -7931)>(489 + 153)) and (v90>(33 -6))) then v87[v89[2 -0]][v87[v89[(23 -15) -(19 -14)]]]=v89[3 + 1];else v87[v89[1 + 1]]=v87[v89[5 -2]][v89[4]];end elseif (((6846 -4194)>(4434 -3076)) and (v90<=(70 -41))) then local v148=0 -(0 + 0);local v149;local v150;local v151;local v152;local v153;local v154;while true do if ((((2929 -(224 + 1197)) + (2809 -(483 + 873)))<(2836 + 579)) and (v148==(0 + 0))) then v149=0 + 0 + 0;v150=nil;v148=1 + (314 -(106 + 208));end if (((5101 -((881 -361) + 86))>(17507 -13971)) and ((1331 -(420 + 910))==v148)) then v151=nil;v152=nil;v148=450 -(280 + 168);end if (((66 -((20 -12) + 5))==(47 + 6)) and (v148==(697 -(565 + 125 + 4)))) then while true do if (((6480 -2901)>=(721 + 194)) and (v149==(1706 -(100 + 1606)))) then v150=0 -0;v151=nil;v149=233 -(135 + 97);end if (((1954 + 1081)<(1970 + 2801)) and (v149==(4 -3))) then local v259=422 -(209 + 72 + 141);while true do if (((4041 + (1550 -(498 + 730)))==(4792 -(365 + 64))) and (v259==(1 -0))) then v149=182 -(66 + (284 -170));break;end if ((v259==(0 -0)) or ((4655 -2884)<615)) then v152=nil;v153=nil;v259=2 -1;end end end if ((((4164 + 964) -2661)>=((2007 -1265) + 511)) and (v149==(1092 -(413 + 677)))) then v154=nil;while true do if (((23678 -18820)>=(6778 -(732 + 1242))) and (v150==(475 -(171 + 304)))) then local v289=114 -(17 + 28 + 69);local v290;while true do if ((((2567 -(432 + 977)) -(24 + 1134))==v289) or ((4396 -(62 + 1373))==(509 + 531))) then v290=0 -0;while true do if (((4333 -2518)==(1972 -(133 + 24))) and (v290==(540 -(48 + 491)))) then v150=1 + 0;break;end if ((v290==(0 + 0)) or (((5408 -(366 + 227)) -2050)>(1608 + 1166))) then local v333=350 -(331 + 19);while true do if (((6397 -4077)>(1731 -((1190 -(392 + 444)) + 1369))) and (v333==(0 -0))) then v151=v89[212 -(100 + 110)];v152,v153=v84(v87[v151](v12(v87,v151 + (145 -(59 + 85)),v89[3 + (1261 -(629 + 632))])));v333=1 + 0;end if (((2857 -(29 + 327))>=(652 -(112 + 11))) and (v333==(1 -0))) then v290=1;break;end end end end break;end end end if ((v150==(1322 -(855 + 465))) or ((4221 -(1241 -247))<=(3181 -2446))) then for v296=v151,v67 do local v297=0 + 0;local v298;while true do if ((v297==((0 -0) + 0)) or ((196 + (1618 -(902 + 606)))>(2303 -936))) then v298=0 -0;while true do if ((v298==(0 + 0)) or (((1187 -752) + 444)>=(1142 + 1010))) then v154=v154 + 1 + 0;v87[v296]=v152[v154];break;end end break;end end end break;end if (((2566 -(217 + 1734))<=(4789 + 42)) and (v150==(1 + (442 -(415 + 27))))) then local v291=0;local v292;while true do if (((4 + 39)<(8763 -5355)) and (0==v291)) then v292=1196 -(626 + 570);while true do if ((v292==(0 + 0)) or ((4183 -3284)>=(3005 + 365))) then local v334=0;while true do if ((v334==(850 -(51 + 798))) or ((2220 + 1404)<(4888 -2312))) then v292=1637 -(1610 + 26);break;end if (((11087 -6447)<=4952) and (v334==((46 + 9) -(45 + 10)))) then v67=(v153 + v151) -(1 + 0);v154=0 -0;v334=1 -0;end end end if (((1 + 0)==v292) or (((14880 -10695) -(288 + 46 + 162))<=((2850 -(24 + 26)) -(312 + 1537)))) then v150=9 -7;break;end end break;end end end end break;end end break;end if (((9031 -6640)<=(4402 -(516 + 219))) and (v148==(733 -(386 + 345)))) then v153=nil;v154=nil;v148=2 + 1;end end elseif (((2537 -(1218 + 137))>(195 + 653)) and (v90==(690 -(465 + 195)))) then local v205=0 -0;local v206;local v207;local v208;local v209;while true do if (((534 + 1488)<(3570 -(153 + 359))) and (v205==(5 -3))) then while true do if (((1350 -(343 + 315))<=(892 + 106)) and (v206==0)) then local v275=0 -0;while true do if ((((6301 -1893) -(61 + 449 + 583))==(8219 -4904)) and (v275==(1 + 0))) then v206=423 -(54 + 368);break;end if (((674 + 619)==(1202 + 91)) and (v275==(0 -0))) then v207=0 + 0;v208=nil;v275=1977 -(1851 + 125);end end end if ((v206==(1 + 0)) or (4548<=(1788 -(115 + 1457)))) then v209=nil;while true do if ((v207==(110 -(55 + 54))) or ((1172 -764)>(2951 -856))) then for v324=v208 + (504 -(164 + 339)),v67 do v7(v209,v87[v324]);end break;end if ((v207==(0 -0)) or ((881 + (5027 -3696))==((9410 -4248) -(257 + 14)))) then local v311=0 -(1457 -(1137 + 320));local v312;while true do if ((v311==(148 -(26 + 122))) or ((5163 -3159)<(369 + 218))) then v312=0 + 0;while true do if (((4310 -(1714 + 104 + 166))>(816 -(2075 -(937 + 865)))) and ((0 -0)==v312)) then v208=v89[2 + 0];v209=v87[v208];v312=1 + 0;end if (((8925 -4293)>(2595 + 330)) and (v312==(2 -1))) then v207=1359 -(209 + 1149);break;end end break;end end end end break;end end break;end if ((3722>=(3880 -(346 + 575))) and (v205==(1 + (1910 -(888 + 1022))))) then v208=nil;v209=nil;v205=2 -0;end if ((v205==(0 + 0)) or (((1201 -759) -(46 + 260))>=(5953 -2524))) then v206=872 -((1320 -(212 + 512)) + 276);v207=nil;v205=(433 -(153 + 276)) -3;end end else local v210=0 -0;local v211;local v212;while true do if ((v210==(0 -0)) or ((4339 -(2863 -1516))<=2511)) then v211=0 -(0 + 0);v212=nil;v210=1 + 0;end if ((v210==((786 -(444 + 341)) + 0)) or ((8 + 157 + 35)>(3668 -1076))) then while true do if ((v211==(0 -0)) or ((507 + 1708)==(3841 -1113))) then v212=v89[4 -(4 -2)];do return v87[v212](v12(v87,v212 + 1 + 0,v89[3 + 0]));end break;end end break;end end end elseif (((84 + 3526)<(140 + 4486)) and (v90<=(220 -((1797 -(1536 + 233)) + 158)))) then if (((8107 -5581)<(3457 -(98 + 484))) and (v90<=(97 -65))) then v87[v89[5 -3]]=v36[v89[(557 -159) -(210 + 185)]];elseif ((v90>(74 -41)) or (((674 -332) + 480)>(1436 + (1613 -(68 + 1217))))) then v36[v89[1743 -(1191 + 549)]]=v87[v89[2 + 0]];else local v214=0 -0;local v215;local v216;local v217;while true do if (((2953 + 796)>(1814 -1050)) and (v214==(1 + 0))) then v217=nil;while true do if (((1 + 0)==v215) or ((1564 + 101)>(965 + 3632))) then while true do if (((7983 -5601)>=(135 + 205)) and (v216==(935 -(331 + 604)))) then v217=v89[1 + 1 + 0];v87[v217]=v87[v217](v12(v87,v217 + 1 + 0 + 0,v89[3 -0]));break;end end break;end if ((v215==(499 -(423 + 76))) or (((59235 -46804) -7602)<=(682 + 2937))) then local v276=0 + 0;while true do if ((v276==(0 + 0)) or ((8266 -6114)>=(4638 + 328))) then v216=0 + 0;v217=nil;v276=1 + (858 -(684 + 174));end if (((270 + (13490 -8864))>=2606) and (v276==(2 -1))) then v215=1 + 0;break;end end end end break;end if (((879 + 664)<=(368 + 3276)) and (v214==(1211 -(132 + 1079)))) then v215=0;v216=nil;v214=1 -0;end end end elseif (((1425 + 3542)>=(5660 -2617)) and (v90<=(2 + 34))) then if ((((3127 -(270 + 486)) -1555)<((832 -452) + 674)) and (v90>(1724 -((792 -394) + 1291)))) then for v242=v89[2],v89[10 -7] do v87[v242]=nil;end else v87[v89[2 -0]]=v89[1712 -((2007 -1011) + 713)] + v87[v89[738 -(320 + 414)]];end elseif ((v90==(87 -50)) or ((3386 + 1117)==(4277 -(395 + (451 -(97 + 18)))))) then v87[v89[(2787 -(349 + 487)) -(1295 + 654)]]=v87[v89[1554 -(765 + 786)]] * v89[1796 -((1684 -(51 + 479)) + 638)];else v87[v89[1 + 1]]=v87[v89[1746 -(805 + 938)]]%v87[v89[8 -4]];end elseif ((v90<=(106 -62)) or (((6316 -(1200 + 104)) -(14191 -10934))<(1632 -(181 + 469)))) then if ((v90<=((373 + 188) -(342 + 178))) or (((17 + 3203) -(1151 + 593))<906)) then if ((v90<=(83 -44)) or (((323 + 1234) -966)>=(5469 -(1180 + 418)))) then if ((v89[1465 -(1072 + 391)]==v87[v89[9 -5]]) or (((1703 -809) + 162)>(377 + 823))) then v66=v66 + 1 + 0;else v66=v89[7 -4];end elseif ((772<=(780 + 2707)) and (v90>((338 + 129) -(8 + 419)))) then v87[v89[1247 -(1025 + 220)]]=v35[v89[2 + 1]];else v87[v89[6 -4]]=v29(v82[v89[3 + 0]],nil,v36);end elseif (((4344 -1382)==(7537 -4575)) and (v90<=(118 -76))) then v87[v89[2 + 0]]=v87[v89[3]][v87[v89[331 -(101 + 226)]]];elseif ((v90==(1691 -((2039 -(115 + 696)) + 163 + 257))) or ((2148 -(70 + 1884))==(1874 -(78 + 1210)))) then local v223=(1463 -(97 + 117)) -((1987 -1011) + 273);local v224;local v225;while true do if (((895 + 1478)>=(928 -((556 -(325 + 146)) + 304))) and (v223==(2 -1))) then while true do if ((v224==0) or ((2794 -663)>=((1878 -(188 + 1106)) + 1568))) then v225=v89[5 -3];do return v12(v87,v225,v67);end break;end end break;end if (((1594 -(686 + 84))<=(9948 -7946)) and (v223==(169 -(44 + 125)))) then local v249=1818 -((1921 -587) + 484);while true do if ((v249==(1055 -(358 + 696))) or ((12288 -8830)<=(4318 -1731))) then v223=1 + 0;break;end if (((2674 -(136 + 1418))>=(2722 -(990 + 993))) and ((1663 -(905 + 758))==v249)) then v224=0 + 0;v225=nil;v249=1 -(0 + 0);end end end end else do return;end end elseif ((1977<(4903 -(473 + 1))) and (v90<=(17 + 30))) then if ((((2750 + 2356) -(547 + 226 + 17))>(6304 -(12644 -9940))) and (v90<=(13 + 6 + 26))) then if ((v87[v89[1 + 1 + 0]]==v87[v89[3 + 1]]) or ((1564 + 2553)==(2406 -1687))) then v66=v66 + 1 + 0;else v66=v89[992 -(715 + 274)];end elseif ((v90>(187 -141)) or ((4954 -(209 + 167))<(2498 + 1605))) then local v226=0 -0;local v227;while true do if ((v226==(0 -0)) or ((49 + (572 -369))<=(1408 -(319 + 864)))) then v227=v89[1814 -(1728 + 43 + 41)];v87[v227](v12(v87,v227 + (2 -(691 -(502 + 188))),v89[1 + 2]));break;end end else local v228=0 -0;local v229;local v230;while true do if ((v228==0) or ((3272 -(15 + 58))>(1998 + 1972))) then v229=0 + 0;v230=nil;v228=1231 -(1123 + 107);end if ((v228==(1 + 0)) or ((2682 -1921)>(4058 -(286 + 986)))) then while true do if (((21000 -16527)>=(4922 -2399)) and (v229==(0 -0))) then v230=v89[3 -1];v87[v230]=v87[v230](v12(v87,v230 + (1284 -(1227 + 56)),v67));break;end end break;end end end elseif (((4366 + 512)==(9229 -(14851 -10500))) and (v90<=((11 -4) + 42))) then if ((v90==(14 + 34)) or ((29 -12)>=(6245 -4156))) then v87[v89[2 + 0]]=v87[v89[3 + 0]] -v89[3 + 1];else local v232=0;local v233;local v234;while true do if (((9509 -6500)<=(8479 -5188)) and (v232==(0 + 0))) then v233=0 + 0;v234=nil;v232=1561 -(1236 + 168 + (275 -119));end if (((1748 + 1162)<=(14941 -11339)) and ((1 + 0)==v232)) then while true do if (((1177 + (1767 -(799 + 322)))>774) and (v233==(0 -0))) then v234=v89[2 -0];v87[v234](v12(v87,v234 + (1971 -(313 + 1657)),v67));break;end end break;end end end elseif ((v90>(201 -151)) or ((115 + 7 + 4211)<(4824 -(3698 -(283 + 654))))) then if (((7953 -6317)<=(21292 -16751)) and  not v87[v89[333 -(169 + 162)]]) then v66=v66 + (203 -(176 + (47 -21)));else v66=v89[10 -7];end else local v235=0 + 0;local v236;while true do if (((1714 -(218 + 1161))<=(819 + 1126)) and (v235==(103 -(23 + 4 + 76)))) then v236=v89[724 -(452 + 270)];v87[v236]=v87[v236]();break;end end end v66=v66 + (968 -(905 + 62));break;end if ((v101==(1790 -((2211 -(39 + 387)) + 5))) or ((3240 + 1318)==((1306 + 1636) -(280 + 584)))) then local v119=0 -0;local v120;while true do if (((1889 -(1253 + 273))<=(353 + 231)) and (v119==(0 + (0 -0)))) then v120=0 + 0;while true do if ((v120==(1 + 0)) or ((2062 -(38 + 1396))>=1702)) then v101=1 + 0;break;end if (((3496 -625)>=(623 + 591)) and (v120==0)) then v89=v80[v66];v90=v89[(1077 -(92 + 984)) + 0];v120=1 -0;end end break;end end end end break;end end break;end end end end v65=3;end if (v65==3) then A,B=v27(v10(v70));if  not A[1] then local v91=v34[4][v66] or "?";error("Script error at ["   .. v91   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end end end;end return v29(v28(),{},v16)();end if (v17==4) then v27=nil;function v27(...)return {...},v11("#",...);end v28=nil;function v28()local v48=0;local v49;local v50;local v51;local v52;local v53;local v54;while true do local v62=0;while true do if (v62==(0 + 0)) then local v75=0 + 0;while true do if (v75==1) then v62=1 -0;break;end if (v75==(0 -0)) then if (v48==(0 + 0)) then local v102=0;local v103;while true do if (v102==(1896 -(126 + 1770))) then v103=0;while true do if (v103==(1 + 0)) then local v116=0;while true do if (v116==1) then v103=2 + 0;break;end if (v116~=0) then else v51={};v52={v49,v50,nil,v51};v116=1 + 0;end end end if (v103==(1 + 1)) then v48=2 -1;break;end if (v103~=0) then else v49={};v50={};v103=1;end end break;end end end if (v48~=2) then else for v106=1 -0,v23() do local v107=0 -0;local v108;local v109;while true do if (1==v107) then while true do if (v108~=(0 -0)) then else v109=v21();if (v20(v109,1,4 -3)~=(0 -0)) then else local v121=0;local v122;local v123;local v124;local v125;local v126;while true do if (v121==2) then v126=nil;while true do if (0==v122) then v123=0;v124=nil;v122=1;end if (v122==(2 -0)) then while true do if (0==v123) then v124=v20(v109,1145 -(352 + 791),3 + 0);v125=v20(v109,3 + 1,6);v123=2 -1;end if (v123==(1 -0)) then v126={v22(),v22(),nil,nil};if (v124==0) then local v237=0;local v238;local v239;while true do if (v237~=0) then else local v251=0 -0;while true do if (v251==(224 -(76 + 148))) then v238=0;v239=nil;v251=1;end if (v251==(1 -0)) then v237=1;break;end end end if (v237~=(2 -1)) then else while true do if (v238==0) then v239=988 -(642 + 346);while true do if ((0 -0)~=v239) then else v126[3]=v22();v126[1136 -(1014 + 118)]=v22();break;end end break;end end break;end end elseif (v124==(1597 -(1359 + 237))) then v126[564 -(107 + 454)]=v23();elseif (v124==(684 -(206 + 476))) then v126[11 -8]=v23() -((2 + 0)^16);elseif (v124==3) then local v278=1242 -(635 + 607);local v279;local v280;while true do if (v278~=0) then else v279=0;v280=nil;v278=1;end if (v278==(3 -2)) then while true do if (0==v279) then v280=0;while true do if ((0 + 0)~=v280) then else v126[3]=v23() -((2 + 0)^16);v126[304 -(31 + 269)]=v22();break;end end break;end end break;end end end v123=2 + 0;end if (v123==3) then if (v20(v125,3,3)~=1) then else v126[1890 -(147 + 1739)]=v54[v126[4]];end v49[v106]=v126;break;end if ((6 -4)~=v123) then else local v158=0;while true do if (v158==(1084 -(281 + 803))) then if (v20(v125,1 + 0,1)==1) then v126[2]=v54[v126[2 -0]];end if (v20(v125,2,2 + 0)~=1) then else v126[5 -2]=v54[v126[3]];end v158=1 -0;end if (v158==1) then v123=5 -2;break;end end end end break;end if (v122==1) then local v128=0;while true do if (v128~=(415 -(262 + 152))) then else v122=2;break;end if (v128==(0 + 0)) then v125=nil;v126=nil;v128=655 -(156 + 498);end end end end break;end if (v121==(0 + 0)) then v122=0;v123=nil;v121=1;end if (v121==(1 -0)) then v124=nil;v125=nil;v121=2;end end end break;end end break;end if (v107==0) then v108=0;v109=nil;v107=59 -(54 + 4);end end end for v110=1 + 0,v23() do v50[v110-(1 + 0)]=v28();end for v112=1,v23() do v51[v112]=v23();end return v52;end v75=3 -2;end end end if (v62~=1) then else if (v48~=1) then else v53=v23();v54={};for v92=1822 -(329 + 1492),v53 do local v93=0 -0;local v94;local v95;local v96;local v97;while true do if (v93==(2 + 0)) then while true do if (v94==(0 -0)) then v95=0;v96=nil;v94=907 -(64 + 842);end if ((1613 -(1012 + 600))~=v94) then else v97=nil;while true do if (v95==1) then if (v96==1) then v97=v21()~=(0 + 0);elseif (v96==2) then v97=v24();elseif (v96==3) then v97=v25();end v54[v92]=v97;break;end if (v95==0) then local v118=0;while true do if ((1860 -(1269 + 590))==v118) then v95=1 + 0;break;end if ((0 + 0)==v118) then local v127=0;while true do if (v127~=(0 + 0)) then else v96=v21();v97=nil;v127=1;end if (1==v127) then v118=1934 -(437 + 1496);break;end end end end end end break;end end break;end if ((0 -0)~=v93) then else local v114=0 + 0;while true do if (v114==(0 -0)) then v94=0;v95=nil;v114=1;end if (v114~=1) then else v93=1434 -(759 + 674);break;end end end if (v93==1) then local v115=432 -(96 + 336);while true do if (1~=v115) then else v93=2;break;end if ((0 -0)==v115) then v96=nil;v97=nil;v115=1 + 0;end end end end end v52[3]=v21();v48=754 -(394 + 358);end break;end end end end v17=5;end if (0==v17) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v37)if (v1(v37,2)==79) then local v71=0;while true do if (v71==0) then v19=v0(v3(v37,1,1));return "";end end else local v72=v2(v0(v37,16));if v19 then local v76=0;local v77;while true do if (v76==0) then v77=v5(v72,v19);v19=nil;v76=1;end if (v76==1) then return v77;end end else return v72;end end end);v20=nil;v17=1;end if (v17==2) then function v22()local v55,v56=v1(v15,v18,v18 + (265 -(57 + 206)));v18=v18 + (513 -(79 + 432));return (v56 * (104 + 152)) + v55;end v23=nil;function v23()local v57=0 -(0 -0);local v58;local v59;local v60;local v61;while true do if (v57==(1 + 0)) then return (v61 * ((43505218 -26727571) -(373 + (133 -(63 + 12))))) + (v60 * 65536) + (v59 * (1085 -(683 + 146))) + v58;end if (v57==(622 -(157 + 465))) then v58,v59,v60,v61=v1(v15,v18,v18 + 3);v18=v18 + (13 -9);v57=1 -(0 + 0);end end end v24=nil;v17=3;end end end vv8());end
